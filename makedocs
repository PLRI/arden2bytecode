#!/bin/bash
set -e #exit on error

# This script downloads the markdown wiki pages from the arden2bytecode
# repository and appends the YAML frontmatter, so they can be included in the
# homepage without difficulty.
# It also changes the links to point to the correct files.

WIKI_REPO_URL=https://github.com/PLRI/arden2bytecode.wiki.git
OUTDIR=_docs
FRONTMATTER_START="---\n# GENERATED - DO NOT EDIT"
FRONTMATTER_END="---\n{% include get_url %}"
BASEDIR="{{ baseurl }}/docs"

# Download the files
echo "Downloading..."
git clone $WIKI_REPO_URL $OUTDIR --quiet
rm -rf $OUTDIR/.git/ # discard .git repo

# Prepend frontmatter to every file
echo "Adding frontmatter..."
for file in $OUTDIR/*.md; do
    # generate a title from the filename
    filename=$(basename "$file") # get filename from long path
    filename="${filename%.*}" # remove extension
    title=${filename//-/ } # replace dashes with spaces
    FRONTMATTER="title: $title"

    # prepend frontmatter
    echo -e "$FRONTMATTER_START\n$FRONTMATTER\n$FRONTMATTER_END\n$(cat $file)" > $file
done

# Change all files to lowercase for consistent links
rename 'y/A-Z/a-z/' $OUTDIR/*.md

# Replace links
# [[Hello World! in Arden Syntax]]  -->  [Hello World! in Arden Syntax](Hello-World!-in-Arden-Syntax.md)
# TODO maybe with awk/sed so python isn't required?
echo "Replacing links..."
python - <<END
import re
import os
import glob

def replace_links_callback(match):
    title = match.group(1)
    return '[%s](%s)' % (title, title_to_filepath(title))

def title_to_filepath(title):
    return '$BASEDIR' + '/' + title.replace(' ', '-').lower() + '/'

pattern = re.compile('\[\[([^\]]+)\]\]') # [[...]]
for filename in glob.glob('$OUTDIR/*.md'):
    with open(filename, 'r') as f:
        text = f.read()

    # replace links
    text = pattern.sub(replace_links_callback, text)

    # write back to same file
    with open(filename, 'w') as f:
        f.write(text)
END

echo "Done. Docs are in $OUTDIR."
