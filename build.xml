<?xml version="1.0" encoding="UTF-8"?>
<!--
    Alternate build option for arden2bytecode.
    Used in Eclipse Project to launch SableCC.
    
    Author: hflicka
-->
<project name="arden2bytecode" default="default" basedir=".">
    <target name="default" depends="compile"></target>

    <target name="init">
        <tstamp />
        <property name="debug" value="on" />
        <property name="optimize" value="off" />
        <property name="deprecation" value="on" />
        <property name="version" value="${DSTAMP}-${TSTAMP}" />
        <property name="name" value="${ant.project.name}" />
        <property name="src.dir" value="src" />
        <property name="tools.dir" value="tools" />
        <property name="build.dir" value="bin" />
        <property name="dist.dir" value="dist" />
        <property name="dist.jar" value="${dist.dir}/${name}-${version}.jar" />
        <property name="run.entrypoint" value="arden.MainClass" />
        <filter token="log" value="true" />
        <filter token="verbose" value="true" />
        <path id="build.classpath">
        	
        </path>
        <path id="run.classpath">
            <path refid="build.classpath" />
            <path location="${build.dir}" />
            <path location="." />
        </path>
        <path id="jar.classpath">
            <path refid="build.classpath" />
            <path location="." />
        </path>
    </target>

    <target name="clean" depends="init">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${dist.dir}" />
        <delete includeemptydirs="true">
            <fileset dir="${build.dir}" includes="**/*" />
            <fileset dir="${dist.dir}" includes="**/*" />
        </delete>
    </target>

	<target name="sableCC" depends="init">
		<java jar="${tools.dir}/sablecc.jar" 
			dir="${src.dir}"
			fork="true"
		    failonerror="true"
		    maxmemory="128m">
		    <arg value="arden.scc"/>
		</java>
	</target>
	
    <target name="compile" depends="init,sableCC">
        <mkdir dir="${build.dir}" />
    	<copy todir="${build.dir}">
    		<fileset dir="${src.dir}">
    		    <exclude name="**/*.java"/>
    		</fileset>
    	</copy>
        <javac srcdir="${src.dir}" 
               destdir="${build.dir}" 
               debug="${debug}" 
               classpathref="build.classpath" 
               optimize="${optimize}" 
               source="1.5">
            <include name="**/*.java" />
        </javac>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${dist.dir}" />
        <manifestclasspath property="manifest.classpath" jarfile="${dist.jar}">
            <classpath refid="jar.classpath" />
        </manifestclasspath>
        <jar destfile="${dist.jar}">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <attribute name="Main-Class" value="${run.entrypoint}" />
                <!-- <attribute name="Class-Path" value="${manifest.classpath}" /> -->
                <attribute name="Implementation-Vendor" value="${user.name}" />
                <attribute name="Implementation-Title" value="${name}" />
                <attribute name="Implementation-Version" value="${version}" />
            </manifest>
            <fileset dir="${build.dir}" />
        </jar>
        <basename property="jar.filename" file="${dist.jar}" />
        <echo file="${dist.dir}/run.cmd" append="false">@echo off
             java -jar %~dp0${jar.filename} %*
             pause
    </echo>
    </target>

    <target name="run" depends="compile">
        <property name="myclasspath" refid="run.classpath" />
        <echo message="Running ${run.entrypoint} with classpath: ${myclasspath}" />
        <java classname="${run.entrypoint}" classpathref="run.classpath" fork="true"></java>
    </target>

    <target name="runAndRedirect" depends="compile">
        <property name="myclasspath" refid="run.classpath" />
        <echo message="Redirecting output to 'output.txt'" />
        <echo message="Running ${run.entrypoint} with classpath: ${myclasspath}" />
        <java classname="${run.entrypoint}" 
              classpathref="run.classpath" 
              fork="true" 
              output="output.txt" 
              logError="true"></java>
    </target>
</project>

